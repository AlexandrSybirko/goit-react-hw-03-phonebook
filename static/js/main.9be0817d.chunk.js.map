{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","form","label","input","type","placeholder","onChange","button","Component","ContactList","contacts","onDeleteContact","map","id","li","onClick","Filter","filter","App","addContact","newContact","shortid","generate","find","contact","alert","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9be0817d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__O0wLr\",\"input\":\"Filter_input__3lUqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__13hxH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2bibC\",\"button\":\"ContactForm_button__w2t4X\",\"input\":\"ContactForm_input__1HVqU\",\"label\":\"ContactForm_label__3y1eE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactList_name__3WlR4\",\"number\":\"ContactList_number__3Ihnx\",\"button\":\"ContactList_button__36w2k\",\"li\":\"ContactList_li__3GLo8\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css'\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <div className={s.section}>\r\n      <h2 className=\"\">{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\n\r\nimport s from './ContactForm.module.css'\r\n\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  }\r\n  \r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  }  \r\n  \r\n  reset() {\r\n    this.setState({\r\n      name: '',\r\n      number: ''\r\n    })\r\n  } \r\n\r\n  render() {\r\n    return (\r\n      <form\r\n      className={s.form}\r\n        onSubmit={this.handleSubmit}>\r\n        <label\r\n          className={s.label}>\r\n          Name\r\n          <input \r\n            className ={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n             placeholder=\"Go IT\"\r\n            onChange={this.handleChange}\r\n            \r\n          />\r\n        </label>\r\n        <label\r\n            className={s.label}     \r\n          >\r\n          Number\r\n          <input\r\n            className ={s.input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n             placeholder=\"000-000-000\"\r\n            onChange={this.handleChange}\r\n            \r\n          />\r\n        </label>\r\n\r\n        <button\r\n          className={s.button}\r\n          type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className=\"\">\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li\r\n        className={s.li}\r\n        key={id}>\r\n        <span className={s.name}>{name}:</span>\r\n        <span className={s.number}>{number}</span>\r\n        <button\r\n          className={s.button}\r\n          type=\"button\"\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n  \r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactList;","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.filter}>\r\n    Find contacts by name\r\n    <input className= {s.input} type='text' value={value} onChange={onChange}  placeholder=\"Go IT\"/>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Section from './components/Section/Section'\nimport ContactForm from './components/ContactForm/ContactForm'\nimport ContactList from './components/ContactList/ContactList'\nimport Filter from './components/Filter/Filter'\n\nclass App extends Component {\n  state = {\n    contacts: [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: ''\n  }\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    }\n\n    if (name === '' || number === '') {\n      alert(`NO DATA.`)\n      return;\n    }\n\n\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`)\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  \n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n \n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts')\n    const parsedContacts = JSON.parse(contacts)\n\n    if (parsedContacts) {\n      this.setState({contacts: parsedContacts})\n    }\n    \n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n  \n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n\n    return (\n      <>\n      <Section title=\"Phonebook\">\n          <ContactForm onSubmit={this.addContact} />\n      </Section>\n      <Section title=\"Phonebook\">\n      <Filter value={filter} onChange={this.changeFilter}/>\n          <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact} />\n          </Section>\n      </>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}